function [X]=generate_mo_withopt_v2(name)
% autogenerated by xsd_to_mo

if(strcmp(name,'EnKFConfig'))
	X = struct( ...
		'dtEnKF',generate_mo_withopt_v2('duration')...
		,'PemsBlackList',generate_mo_withopt_v2('valueList')...
		,'ATTRIBUTE',struct(...
			'enkfType',[]...
			,'includePeMS',[]...
			,'pemsNoiseMean',[]...
			,'pemsNoiseStdev',[]...
			,'probeProbabilityThreshold',[]...
			,'probeSpeedThreshold',[]...
			,'includeNavteq',[]...
			,'navteqNoiseMean',[]...
			,'navteqNoiseStdev',[]...
			,'navteqPercentage',[]...
			,'includeTelenav',[]...
			,'telenavNoiseMean',[]...
			,'telenavNoiseStdev',[]...
			,'telenavPercentage',[]...
			,'useLocalization',[]...
			,'localizationDistance',[]...
			)...
	);
	return
end

if(strcmp(name,'EstimationParams'))
	X = struct( ...
		'EnKFConfig',generate_mo_withopt_v2('EnKFConfig')...
		,'dtOutput',generate_mo_withopt_v2('duration')...
		,'liveModeLag',generate_mo_withopt_v2('duration')...
		,'timeBegin',generate_mo_withopt_v2('dateTime')...
		,'timeEnd',generate_mo_withopt_v2('dateTime')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'runMode',[]...
			,'workflow',[]...
			,'ctmType',[]...
			,'ensembleSize',[]...
			,'additiveModelNoiseMean',[]...
			,'additiveModelNoiseStdDev',[]...
			,'fdType',[]...
			,'additiveVelocityFunctionNoiseMean',[]...
			,'additiveVelocityFunctionNoiseStdDev',[]...
			,'EstimationForecastConfig',[]...
			,'includeTelenav',[]...
			,'telenavNoiseMean',[]...
			,'telenavNoiseStdev',[]...
			,'telenavPercentage',[]...
			,'useLocalization',[]...
			,'localizationDistance',[]...
			,'reportStatisticsAfterCTM',[]...
			,'reportEnsembleAfterCTM',[]...
			,'reportStatisticsAfterEnKF',[]...
			,'reportEnsembleAfterEnKF',[]...
			,'reportStatisticsHistory',[]...
			,'reportToDB',[]...
			,'reportToDirectory',[]...
			,'reportDirectory',[]...
			,'initialStateUncertainty',[]...
			,'initialDensityFraction',[]...
			)...
	);
	return
end

if(strcmp(name,'valueList'))
	X=[];
return
end

if(strcmp(name,'project'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'position'))
	X = struct( ...
		'point',generate_mo_withopt_v2('point')...
	);
	return
end

if(strcmp(name,'display_position'))
	X = struct( ...
		'point',generate_mo_withopt_v2('point')...
	);
	return
end

if(strcmp(name,'point'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'lat',[]...
			,'lng',[]...
			,'elevation',[]...
			)...
	);
	return
end

if(strcmp(name,'description'))
	X='';
	return
end

if(strcmp(name,'parameters'))
	X = struct( ...
		'parameter',generate_mo_withopt_v2('parameter')...
		,'description',generate_mo_withopt_v2('description')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'type_id',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'parameter'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'value',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'table'))
	X = struct( ...
		'column_names',generate_mo_withopt_v2('column_names')...
		,'row',generate_mo_withopt_v2('row')...
		,'ATTRIBUTE',struct(...
			'name',[]...
			)...
	);
	return
end

if(strcmp(name,'column_names'))
	X = struct( ...
		'column_name',generate_mo_withopt_v2('column_name')...
	);
	return
end

if(strcmp(name,'column_name'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'name',[]...
			,'key',[]...
			)...
	);
	return
end

if(strcmp(name,'row'))
	X = struct( ...
		'column',generate_mo_withopt_v2('column')...
	);
	return
end

if(strcmp(name,'column'))
	X='';
	return
end

if(strcmp(name,'duration'))
	X=struct(...
		'ATTRIBUTE',struct(...
			'milliseconds',[]...
			)...
	);
return
end

if(strcmp(name,'dateTime'))
	X=struct(...
		'ATTRIBUTE',struct(...
			'milliseconds',[]...
			)...
	);
return
end

if(strcmp(name,'VDS'))
	X = struct( ...
		'position',generate_mo_withopt_v2('position')...
		,'parameters',generate_mo_withopt_v2('parameters')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'freeway_num',[]...
			,'direction',[]...
			,'lane_count',[]...
			,'district',[]...
			,'county',[]...
			,'city',[]...
			,'state_postmile',[]...
			,'absolute_postmile',[]...
			,'detector_length',[]...
			)...
	);
	return
end

if(strcmp(name,'PeMSDataSet'))
	X = struct( ...
		'PeMSDataProfile',generate_mo_withopt_v2('PeMSDataProfile')...
	);
	return
end

if(strcmp(name,'PeMSDataProfile'))
	X = struct( ...
		'PeMSDatum',generate_mo_withopt_v2('PeMSDatum')...
		,'ATTRIBUTE',struct(...
			'vds_id',[]...
			)...
	);
	return
end

if(strcmp(name,'PeMSDatum'))
	X = struct( ...
		'GFactor',generate_mo_withopt_v2('GFactor')...
		,'timestamp',generate_mo_withopt_v2('timestamp')...
		,'ATTRIBUTE',struct(...
			'flow',[]...
			,'density',[]...
			,'density_error',[]...
			,'speed',[]...
			,'speed_error',[]...
			,'free_flow_speed',[]...
			,'func_loop_fact',[]...
			,'vds_id',[]...
			)...
	);
	return
end

if(strcmp(name,'PeMSAggregateDataSet'))
	X = struct( ...
		'PeMSAggregateDataProfile',generate_mo_withopt_v2('PeMSAggregateDataProfile')...
	);
	return
end

if(strcmp(name,'PeMSAggregateDataProfile'))
	X = struct( ...
		'PeMSAggregateDatum',generate_mo_withopt_v2('PeMSAggregateDatum')...
		,'ATTRIBUTE',struct(...
			'vds_id',[]...
			)...
	);
	return
end

if(strcmp(name,'PeMSAggregateDatum'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('timestamp')...
		,'ATTRIBUTE',struct(...
			'flow',[]...
			,'density',[]...
			,'speed',[]...
			,'health',[]...
			,'run_id',[]...
			,'vds_id',[]...
			,'agg_period',[]...
			)...
	);
	return
end

if(strcmp(name,'PeMSStation'))
	X = struct( ...
		'GFactor',generate_mo_withopt_v2('GFactor')...
		,'timestamp',generate_mo_withopt_v2('timestamp')...
		,'ATTRIBUTE',struct(...
			'flow',[]...
			,'density',[]...
			,'density_error',[]...
			,'speed',[]...
			,'speed_error',[]...
			,'free_flow_speed',[]...
			,'func_loop_fact',[]...
			)...
	);
	return
end

if(strcmp(name,'GFactor'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'lane',[]...
			,'g_factor',[]...
			)...
	);
	return
end

if(strcmp(name,'PeMSStationAggregate'))
	X = struct( ...
		'PeMSAggregate',generate_mo_withopt_v2('PeMSAggregate')...
		,'timestamp',generate_mo_withopt_v2('timestamp')...
		,'ATTRIBUTE',struct(...
			'vds_id',[]...
			)...
	);
	return
end

if(strcmp(name,'PeMSAggregate'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'lane',[]...
			,'samples',[]...
			,'flow',[]...
			,'avg_occupancy',[]...
			,'avg_speed',[]...
			,'observed',[]...
			)...
	);
	return
end

if(strcmp(name,'PIFProbeDataSet'))
	X = struct( ...
		'PIFProbeData',generate_mo_withopt_v2('PIFProbeData')...
		,'ATTRIBUTE',struct(...
			'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'PIFProbeData'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('timestamp')...
		,'ATTRIBUTE',struct(...
			'network_id',[]...
			,'link_id',[]...
			,'run_id',[]...
			,'offset',[]...
			,'speed',[]...
			,'probability',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'link_references'))
	X = struct( ...
		'link_reference',generate_mo_withopt_v2('link_reference')...
	);
	return
end

if(strcmp(name,'link_reference'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			)...
	);
	return
end

if(strcmp(name,'network'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'NodeList',generate_mo_withopt_v2('NodeList')...
		,'LinkList',generate_mo_withopt_v2('LinkList')...
		,'position',generate_mo_withopt_v2('position')...
		,'ATTRIBUTE',struct(...
			'name',[]...
			,'id',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'NodeList'))
	X = struct( ...
		'node',generate_mo_withopt_v2('node')...
	);
	return
end

if(strcmp(name,'node'))
	X = struct( ...
		'roadway_markers',generate_mo_withopt_v2('roadway_markers')...
		,'outputs',generate_mo_withopt_v2('outputs')...
		,'inputs',generate_mo_withopt_v2('inputs')...
		,'position',generate_mo_withopt_v2('position')...
		,'node_type',generate_mo_withopt_v2('node_type')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'node_name',[]...
			,'in_sync',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'roadway_markers'))
	X = struct( ...
		'marker',generate_mo_withopt_v2('marker')...
	);
	return
end

if(strcmp(name,'marker'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'postmile',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'outputs'))
	X = struct( ...
		'output',generate_mo_withopt_v2('output')...
	);
	return
end

if(strcmp(name,'output'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'link_id',[]...
			)...
	);
	return
end

if(strcmp(name,'inputs'))
	X = struct( ...
		'input',generate_mo_withopt_v2('input')...
	);
	return
end

if(strcmp(name,'input'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'link_id',[]...
			)...
	);
	return
end

if(strcmp(name,'node_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'LinkList'))
	X = struct( ...
		'link',generate_mo_withopt_v2('link')...
	);
	return
end

if(strcmp(name,'link'))
	X = struct( ...
		'begin',generate_mo_withopt_v2('begin')...
		,'end',generate_mo_withopt_v2('end')...
		,'roads',generate_mo_withopt_v2('roads')...
		,'dynamics',generate_mo_withopt_v2('dynamics')...
		,'position',generate_mo_withopt_v2('position')...
		,'shape',generate_mo_withopt_v2('shape')...
		,'link_type',generate_mo_withopt_v2('link_type')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'lanes',[]...
			,'lane_offset',[]...
			,'length',[]...
			,'speed_limit',[]...
			,'link_name',[]...
			,'mod_stamp',[]...
			,'id',[]...
			,'in_sync',[]...
			)...
	);
	return
end

if(strcmp(name,'begin'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'node_id',[]...
			)...
	);
	return
end

if(strcmp(name,'end'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'node_id',[]...
			)...
	);
	return
end

if(strcmp(name,'roads'))
	X = struct( ...
		'road',generate_mo_withopt_v2('road')...
	);
	return
end

if(strcmp(name,'road'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'dynamics'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'type',[]...
			)...
	);
	return
end

if(strcmp(name,'shape'))
	X='';
	return
end

if(strcmp(name,'link_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'targetElements'))
	X = struct( ...
		'scenarioElement',generate_mo_withopt_v2('scenarioElement')...
	);
	return
end

if(strcmp(name,'settings'))
	X = struct( ...
		'units',generate_mo_withopt_v2('units')...
	);
	return
end

if(strcmp(name,'units'))
	X='';
	return
end

if(strcmp(name,'VehicleTypeSet'))
	X = struct( ...
		'vehicleType',generate_mo_withopt_v2('vehicleType')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			)...
	);
	return
end

if(strcmp(name,'vehicleType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'size_factor',[]...
			,'is_standard',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'scenario'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'settings',generate_mo_withopt_v2('settings')...
		,'NetworkSet',generate_mo_withopt_v2('NetworkSet')...
		,'VehicleTypeSet',generate_mo_withopt_v2('VehicleTypeSet')...
		,'SignalSet',generate_mo_withopt_v2('SignalSet')...
		,'SensorSet',generate_mo_withopt_v2('SensorSet')...
		,'InitialDensitySet',generate_mo_withopt_v2('InitialDensitySet')...
		,'WeavingFactorSet',generate_mo_withopt_v2('WeavingFactorSet')...
		,'SplitRatioSet',generate_mo_withopt_v2('SplitRatioSet')...
		,'DownstreamBoundaryCapacitySet',generate_mo_withopt_v2('DownstreamBoundaryCapacitySet')...
		,'EventSet',generate_mo_withopt_v2('EventSet')...
		,'DemandSet',generate_mo_withopt_v2('DemandSet')...
		,'ControllerSet',generate_mo_withopt_v2('ControllerSet')...
		,'FundamentalDiagramSet',generate_mo_withopt_v2('FundamentalDiagramSet')...
		,'NetworkConnections',generate_mo_withopt_v2('NetworkConnections')...
		,'DestinationNetworks',generate_mo_withopt_v2('DestinationNetworks')...
		,'RouteSet',generate_mo_withopt_v2('RouteSet')...
		,'ATTRIBUTE',struct(...
			'project_id',[]...
			,'id',[]...
			,'name',[]...
			,'schemaVersion',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'ScenarioSetType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'NetworkSet'))
	X = struct( ...
		'network',generate_mo_withopt_v2('network')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			)...
	);
	return
end

if(strcmp(name,'SignalSet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'signal',generate_mo_withopt_v2('signal')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'signal'))
	X = struct( ...
		'phase',generate_mo_withopt_v2('phase')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'node_id',[]...
			)...
	);
	return
end

if(strcmp(name,'phase'))
	X = struct( ...
		'link_references',generate_mo_withopt_v2('link_references')...
		,'ATTRIBUTE',struct(...
			'nema',[]...
			,'protected',[]...
			,'permissive',[]...
			,'lag',[]...
			,'recall',[]...
			,'yellow_time',[]...
			,'red_clear_time',[]...
			,'min_green_time',[]...
			)...
	);
	return
end

if(strcmp(name,'SensorSet'))
	X = struct( ...
		'sensor',generate_mo_withopt_v2('sensor')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'description',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'sensor'))
	X = struct( ...
		'display_position',generate_mo_withopt_v2('display_position')...
		,'parameters',generate_mo_withopt_v2('parameters')...
		,'table',generate_mo_withopt_v2('table')...
		,'sensor_type',generate_mo_withopt_v2('sensor_type')...
		,'usageType',generate_mo_withopt_v2('usageType')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'network_id',[]...
			,'link_id',[]...
			,'link_type_original',[]...
			,'java_class',[]...
			,'sensor_id_original',[]...
			,'data_feed_id',[]...
			,'lane_number',[]...
			,'link_offset',[]...
			,'mod_stamp',[]...
			,'health_status',[]...
			)...
	);
	return
end

if(strcmp(name,'sensor_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'ActuatorSet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'actuator',generate_mo_withopt_v2('actuator')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'actuator'))
	X = struct( ...
		'scenarioElementType',generate_mo_withopt_v2('scenarioElementType')...
		,'actuator_type',generate_mo_withopt_v2('actuator_type')...
		,'display_position',generate_mo_withopt_v2('display_position')...
		,'parameters',generate_mo_withopt_v2('parameters')...
		,'table',generate_mo_withopt_v2('table')...
		,'usageType',generate_mo_withopt_v2('usageType')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'network_id',[]...
			,'element_id',[]...
			,'actuator_id_original',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'actuator_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'InitialDensitySet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'density',generate_mo_withopt_v2('density')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'tstamp',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'density'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'vehicle_type_id',[]...
			,'crudFlag',[]...
			,'id',[]...
			,'link_id',[]...
			,'destination_network_id',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'WeavingFactorSet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'weavingfactors',generate_mo_withopt_v2('weavingfactors')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'weavingfactors'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'vehicle_type_id',[]...
			,'link_in',[]...
			,'link_out',[]...
			)...
	);
	return
end

if(strcmp(name,'SplitRatioSet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'splitRatioProfile',generate_mo_withopt_v2('splitRatioProfile')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'splitRatioProfile'))
	X = struct( ...
		'splitratio',generate_mo_withopt_v2('splitratio')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'node_id',[]...
			,'start_time',[]...
			,'dt',[]...
			,'network_id',[]...
			,'destination_network_id',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'splitratio'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'link_in',[]...
			,'link_out',[]...
			,'vehicle_type_id',[]...
			,'ids',[]...
			,'crudFlags',[]...
			,'mod_stamps',[]...
			)...
	);
	return
end

if(strcmp(name,'DownstreamBoundaryCapacitySet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'downstreamBoundaryCapacityProfile',generate_mo_withopt_v2('downstreamBoundaryCapacityProfile')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'downstreamBoundaryCapacityProfile'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'link_id',[]...
			,'start_time',[]...
			,'dt',[]...
			)...
	);
	return
end

if(strcmp(name,'EventSet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'event',generate_mo_withopt_v2('event')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'event'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'display_position',generate_mo_withopt_v2('display_position')...
		,'targetElements',generate_mo_withopt_v2('targetElements')...
		,'parameters',generate_mo_withopt_v2('parameters')...
		,'splitratioEvent',generate_mo_withopt_v2('splitratioEvent')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'tstamp',[]...
			,'enabled',[]...
			,'type',[]...
			,'java_class',[]...
			)...
	);
	return
end

if(strcmp(name,'splitratioEvent'))
	X = struct( ...
		'splitratio',generate_mo_withopt_v2('splitratio')...
	);
	return
end

if(strcmp(name,'DemandSet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'demandProfile',generate_mo_withopt_v2('demandProfile')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'crudFlag',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'demandProfile'))
	X = struct( ...
		'demand',generate_mo_withopt_v2('demand')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'crudFlag',[]...
			,'knob',[]...
			,'start_time',[]...
			,'dt',[]...
			,'link_id_org',[]...
			,'destination_network_id',[]...
			,'std_dev_add',[]...
			,'std_dev_mult',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'demand'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'vehicle_type_id',[]...
			,'ids',[]...
			,'crudFlags',[]...
			,'mod_stamps',[]...
			)...
	);
	return
end

if(strcmp(name,'ControllerSet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'controller',generate_mo_withopt_v2('controller')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'controller'))
	X = struct( ...
		'parameters',generate_mo_withopt_v2('parameters')...
		,'feedback_sensors',generate_mo_withopt_v2('feedback_sensors')...
		,'target_actuators',generate_mo_withopt_v2('target_actuators')...
		,'queue_controller',generate_mo_withopt_v2('queue_controller')...
		,'ActivationIntervals',generate_mo_withopt_v2('ActivationIntervals')...
		,'table',generate_mo_withopt_v2('table')...
		,'controllerType',generate_mo_withopt_v2('controllerType')...
		,'ATTRIBUTE',struct(...
			'name',[]...
			,'id',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'controllerType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'usageType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'queue_controller'))
	X = struct( ...
		'parameters',generate_mo_withopt_v2('parameters')...
		,'ATTRIBUTE',struct(...
			'type',[]...
			,'java_class',[]...
			)...
	);
	return
end

if(strcmp(name,'ActivationIntervals'))
	X = struct( ...
		'interval',generate_mo_withopt_v2('interval')...
	);
	return
end

if(strcmp(name,'interval'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'start_time',[]...
			,'end_time',[]...
			)...
	);
	return
end

if(strcmp(name,'target_actuators'))
	X = struct( ...
		'target_actuator',generate_mo_withopt_v2('target_actuator')...
	);
	return
end

if(strcmp(name,'target_actuator'))
	X = struct( ...
		'usageType',generate_mo_withopt_v2('usageType')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'actuator_id_original',[]...
			,'crudFlag',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'feedback_sensors'))
	X = struct( ...
		'feedback_sensor',generate_mo_withopt_v2('feedback_sensor')...
	);
	return
end

if(strcmp(name,'feedback_sensor'))
	X = struct( ...
		'usageType',generate_mo_withopt_v2('usageType')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'sensor_id_original',[]...
			,'crudFlag',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'scenarioElement'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'usage',[]...
			,'type',[]...
			)...
	);
	return
end

if(strcmp(name,'scenarioElementType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'FundamentalDiagramSet'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'fundamentalDiagramProfile',generate_mo_withopt_v2('fundamentalDiagramProfile')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'fundamentalDiagramProfile'))
	X = struct( ...
		'fundamentalDiagram',generate_mo_withopt_v2('fundamentalDiagram')...
		,'fundamentalDiagramType',generate_mo_withopt_v2('fundamentalDiagramType')...
		,'calibrationAlgorithmType',generate_mo_withopt_v2('calibrationAlgorithmType')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'link_id',[]...
			,'sensor_id',[]...
			,'start_time',[]...
			,'dt',[]...
			,'mod_stamp',[]...
			,'agg_run_id',[]...
			)...
	);
	return
end

if(strcmp(name,'fundamentalDiagram'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'mod_stamp',[]...
			,'order',[]...
			,'capacity',[]...
			,'capacity_drop',[]...
			,'std_dev_capacity',[]...
			,'free_flow_speed',[]...
			,'congestion_speed',[]...
			,'critical_speed',[]...
			,'std_dev_free_flow_speed',[]...
			,'std_dev_congestion_speed',[]...
			,'jam_density',[]...
			,'transition_density',[]...
			)...
	);
	return
end

if(strcmp(name,'fundamentalDiagramType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'calibrationAlgorithmType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'NetworkConnections'))
	X = struct( ...
		'description',generate_mo_withopt_v2('description')...
		,'networkpair',generate_mo_withopt_v2('networkpair')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'networkpair'))
	X = struct( ...
		'linkpair',generate_mo_withopt_v2('linkpair')...
		,'ATTRIBUTE',struct(...
			'network_a',[]...
			,'network_b',[]...
			)...
	);
	return
end

if(strcmp(name,'linkpair'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'link_a',[]...
			,'link_b',[]...
			)...
	);
	return
end

if(strcmp(name,'DestinationNetworks'))
	X = struct( ...
		'destination_network',generate_mo_withopt_v2('destination_network')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'destination_network'))
	X = struct( ...
		'link_references',generate_mo_withopt_v2('link_references')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'link_id_destination',[]...
			)...
	);
	return
end

if(strcmp(name,'RouteSet'))
	X = struct( ...
		'route',generate_mo_withopt_v2('route')...
		,'ATTRIBUTE',struct(...
			'project_id',[]...
			,'id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'route'))
	X = struct( ...
		'route_link',generate_mo_withopt_v2('route_link')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'route_link'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'link_id',[]...
			,'link_order',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'routePerformanceSet'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'routePerformance',generate_mo_withopt_v2('routePerformance')...
		,'ATTRIBUTE',struct(...
			'run_id',[]...
			)...
	);
	return
end

if(strcmp(name,'routePerformance'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'linkStateSet',generate_mo_withopt_v2('linkStateSet')...
		,'linkPerformanceSet',generate_mo_withopt_v2('linkPerformanceSet')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'run_id',[]...
			,'travel_time',[]...
			)...
	);
	return
end

if(strcmp(name,'linkStateSet'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'linkState',generate_mo_withopt_v2('linkState')...
		,'ATTRIBUTE',struct(...
			'network_id',[]...
			,'run_id',[]...
			,'particle_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			)...
	);
	return
end

if(strcmp(name,'linkStateDebugSet'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'linkState-debug',generate_mo_withopt_v2('linkState-debug')...
		,'ATTRIBUTE',struct(...
			'network_id',[]...
			,'run_id',[]...
			,'particle_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			)...
	);
	return
end

if(strcmp(name,'linkPerformanceSet'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'linkPerformance',generate_mo_withopt_v2('linkPerformance')...
		,'ATTRIBUTE',struct(...
			'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			)...
	);
	return
end

if(strcmp(name,'linkState'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'trafficDatum',generate_mo_withopt_v2('trafficDatum')...
		,'quantity_type',generate_mo_withopt_v2('quantity_type')...
		,'aggregation_type',generate_mo_withopt_v2('aggregation_type')...
		,'application_type',generate_mo_withopt_v2('application_type')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			,'density',[]...
			,'ff_speed',[]...
			,'crit_speed',[]...
			,'congestion_speed',[]...
			,'capacity',[]...
			,'jam_density',[]...
			,'capacity_drop',[]...
			)...
	);
	return
end

if(strcmp(name,'linkState-debug'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'trafficDatum',generate_mo_withopt_v2('trafficDatum')...
		,'quantity_type',generate_mo_withopt_v2('quantity_type')...
		,'aggregation_type',generate_mo_withopt_v2('aggregation_type')...
		,'application_type',generate_mo_withopt_v2('application_type')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'network_id',[]...
			,'run_id',[]...
			,'particle_id',[]...
			,'dt',[]...
			,'ff_speed',[]...
			,'crit_speed',[]...
			,'congestion_speed',[]...
			,'capacity',[]...
			,'jam_density',[]...
			,'capacity_drop',[]...
			)...
	);
	return
end

if(strcmp(name,'linkState-detail'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'vehicleType',generate_mo_withopt_v2('vehicleType')...
		,'trafficDatum',generate_mo_withopt_v2('trafficDatum')...
		,'quantity_type',generate_mo_withopt_v2('quantity_type')...
		,'aggregation_type',generate_mo_withopt_v2('aggregation_type')...
		,'application_type',generate_mo_withopt_v2('application_type')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			)...
	);
	return
end

if(strcmp(name,'quantity_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			)...
	);
	return
end

if(strcmp(name,'application_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			)...
	);
	return
end

if(strcmp(name,'aggregation_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			)...
	);
	return
end

if(strcmp(name,'linkPerformance'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'trafficPerformanceByVehicleType',generate_mo_withopt_v2('trafficPerformanceByVehicleType')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			,'productivity_loss',[]...
			,'vc_ratio',[]...
			,'los',[]...
			)...
	);
	return
end

if(strcmp(name,'trafficPerformanceByVehicleType'))
	X = struct( ...
		'trafficPerformance',generate_mo_withopt_v2('trafficPerformance')...
	);
	return
end

if(strcmp(name,'trafficDatum'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'destination_network_id',[]...
			,'vehicle_count',[]...
			,'speed',[]...
			,'inflow',[]...
			,'outflow',[]...
			)...
	);
	return
end

if(strcmp(name,'trafficPerformance'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'destination_network_id',[]...
			,'vmt',[]...
			,'vht',[]...
			,'delay',[]...
			,'travel_time',[]...
			)...
	);
	return
end

if(strcmp(name,'signalStateSet'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'signalState',generate_mo_withopt_v2('signalState')...
		,'ATTRIBUTE',struct(...
			'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			)...
	);
	return
end

if(strcmp(name,'signalPerformanceSet'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'signalPerformance',generate_mo_withopt_v2('signalPerformance')...
		,'ATTRIBUTE',struct(...
			'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			)...
	);
	return
end

if(strcmp(name,'signalState'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'phaseDatum',generate_mo_withopt_v2('phaseDatum')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			)...
	);
	return
end

if(strcmp(name,'phaseDatum'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'ATTRIBUTE',struct(...
			'phase',[]...
			,'duration',[]...
			)...
	);
	return
end

if(strcmp(name,'signalPerformance'))
	X = struct( ...
		'timestamp',generate_mo_withopt_v2('dateTime')...
		,'phasePerformance',generate_mo_withopt_v2('phasePerformance')...
		,'ATTRIBUTE',struct(...
			'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			)...
	);
	return
end

if(strcmp(name,'phasePerformance'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'network_id',[]...
			,'run_id',[]...
			,'dt',[]...
			,'quantity_type',[]...
			,'phase',[]...
			,'phase_utilization',[]...
			,'progression_quality',[]...
			,'delay_per_cycle',[]...
			,'queue_size',[]...
			,'number_of_stops',[]...
			)...
	);
	return
end

error([name ' is not a supported model object'])