function [X]=generate_mo_withopt_v1(name)
% autogenerated by xsd_to_mo

if(strcmp(name,'project'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'position'))
	X = struct( ...
		'point',generate_mo_withopt_v1('point')...
	);
	return
end

if(strcmp(name,'display_position'))
	X = struct( ...
		'point',generate_mo_withopt_v1('point')...
	);
	return
end

if(strcmp(name,'point'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'lat',[]...
			,'lng',[]...
			,'elevation',[]...
			)...
	);
	return
end

if(strcmp(name,'description'))
	X='';
	return
end

if(strcmp(name,'parameters'))
	X = struct( ...
		'parameter',generate_mo_withopt_v1('parameter')...
		,'description',generate_mo_withopt_v1('description')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'type_id',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'parameter'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'value',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'table'))
	X = struct( ...
		'column_names',generate_mo_withopt_v1('column_names')...
		,'row',generate_mo_withopt_v1('row')...
		,'ATTRIBUTE',struct(...
			'name',[]...
			)...
	);
	return
end

if(strcmp(name,'column_names'))
	X = struct( ...
		'column_name',generate_mo_withopt_v1('column_name')...
	);
	return
end

if(strcmp(name,'column_name'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'name',[]...
			,'key',[]...
			)...
	);
	return
end

if(strcmp(name,'row'))
	X = struct( ...
		'column',generate_mo_withopt_v1('column')...
	);
	return
end

if(strcmp(name,'column'))
	X='';
	return
end

if(strcmp(name,'link_references'))
	X = struct( ...
		'link_reference',generate_mo_withopt_v1('link_reference')...
	);
	return
end

if(strcmp(name,'link_reference'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			)...
	);
	return
end

if(strcmp(name,'network'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'NodeList',generate_mo_withopt_v1('NodeList')...
		,'LinkList',generate_mo_withopt_v1('LinkList')...
		,'position',generate_mo_withopt_v1('position')...
		,'ATTRIBUTE',struct(...
			'name',[]...
			,'id',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'NodeList'))
	X = struct( ...
		'node',generate_mo_withopt_v1('node')...
	);
	return
end

if(strcmp(name,'node'))
	X = struct( ...
		'roadway_markers',generate_mo_withopt_v1('roadway_markers')...
		,'outputs',generate_mo_withopt_v1('outputs')...
		,'inputs',generate_mo_withopt_v1('inputs')...
		,'position',generate_mo_withopt_v1('position')...
		,'node_type',generate_mo_withopt_v1('node_type')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'node_name',[]...
			,'in_sync',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'roadway_markers'))
	X = struct( ...
		'marker',generate_mo_withopt_v1('marker')...
	);
	return
end

if(strcmp(name,'marker'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'postmile',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'outputs'))
	X = struct( ...
		'output',generate_mo_withopt_v1('output')...
	);
	return
end

if(strcmp(name,'output'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'link_id',[]...
			)...
	);
	return
end

if(strcmp(name,'inputs'))
	X = struct( ...
		'input',generate_mo_withopt_v1('input')...
	);
	return
end

if(strcmp(name,'input'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'link_id',[]...
			)...
	);
	return
end

if(strcmp(name,'node_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'LinkList'))
	X = struct( ...
		'link',generate_mo_withopt_v1('link')...
	);
	return
end

if(strcmp(name,'link'))
	X = struct( ...
		'begin',generate_mo_withopt_v1('begin')...
		,'end',generate_mo_withopt_v1('end')...
		,'roads',generate_mo_withopt_v1('roads')...
		,'dynamics',generate_mo_withopt_v1('dynamics')...
		,'position',generate_mo_withopt_v1('position')...
		,'shape',generate_mo_withopt_v1('shape')...
		,'link_type',generate_mo_withopt_v1('link_type')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'lanes',[]...
			,'lane_offset',[]...
			,'length',[]...
			,'speed_limit',[]...
			,'link_name',[]...
			,'mod_stamp',[]...
			,'id',[]...
			,'in_sync',[]...
			)...
	);
	return
end

if(strcmp(name,'begin'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'node_id',[]...
			)...
	);
	return
end

if(strcmp(name,'end'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'node_id',[]...
			)...
	);
	return
end

if(strcmp(name,'roads'))
	X = struct( ...
		'road',generate_mo_withopt_v1('road')...
	);
	return
end

if(strcmp(name,'road'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'dynamics'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'type',[]...
			)...
	);
	return
end

if(strcmp(name,'shape'))
	X='';
	return
end

if(strcmp(name,'link_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'targetElements'))
	X = struct( ...
		'scenarioElement',generate_mo_withopt_v1('scenarioElement')...
	);
	return
end

if(strcmp(name,'settings'))
	X = struct( ...
		'units',generate_mo_withopt_v1('units')...
	);
	return
end

if(strcmp(name,'units'))
	X='';
	return
end

if(strcmp(name,'VehicleTypeSet'))
	X = struct( ...
		'vehicleType',generate_mo_withopt_v1('vehicleType')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			)...
	);
	return
end

if(strcmp(name,'vehicleType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'size_factor',[]...
			,'is_standard',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'scenario'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'settings',generate_mo_withopt_v1('settings')...
		,'NetworkSet',generate_mo_withopt_v1('NetworkSet')...
		,'VehicleTypeSet',generate_mo_withopt_v1('VehicleTypeSet')...
		,'SignalSet',generate_mo_withopt_v1('SignalSet')...
		,'SensorSet',generate_mo_withopt_v1('SensorSet')...
		,'ActuatorSet',generate_mo_withopt_v1('ActuatorSet')...
		,'InitialDensitySet',generate_mo_withopt_v1('InitialDensitySet')...
		,'WeavingFactorSet',generate_mo_withopt_v1('WeavingFactorSet')...
		,'SplitRatioSet',generate_mo_withopt_v1('SplitRatioSet')...
		,'DownstreamBoundaryCapacitySet',generate_mo_withopt_v1('DownstreamBoundaryCapacitySet')...
		,'EventSet',generate_mo_withopt_v1('EventSet')...
		,'DemandSet',generate_mo_withopt_v1('DemandSet')...
		,'ControllerSet',generate_mo_withopt_v1('ControllerSet')...
		,'FundamentalDiagramSet',generate_mo_withopt_v1('FundamentalDiagramSet')...
		,'NetworkConnections',generate_mo_withopt_v1('NetworkConnections')...
		,'DestinationNetworks',generate_mo_withopt_v1('DestinationNetworks')...
		,'RouteSet',generate_mo_withopt_v1('RouteSet')...
		,'ATTRIBUTE',struct(...
			'project_id',[]...
			,'id',[]...
			,'name',[]...
			,'schemaVersion',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'ScenarioSetType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'NetworkSet'))
	X = struct( ...
		'network',generate_mo_withopt_v1('network')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			)...
	);
	return
end

if(strcmp(name,'SignalSet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'signal',generate_mo_withopt_v1('signal')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'signal'))
	X = struct( ...
		'phase',generate_mo_withopt_v1('phase')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'node_id',[]...
			)...
	);
	return
end

if(strcmp(name,'phase'))
	X = struct( ...
		'link_references',generate_mo_withopt_v1('link_references')...
		,'ATTRIBUTE',struct(...
			'nema',[]...
			,'protected',[]...
			,'permissive',[]...
			,'lag',[]...
			,'recall',[]...
			,'yellow_time',[]...
			,'red_clear_time',[]...
			,'min_green_time',[]...
			)...
	);
	return
end

if(strcmp(name,'SensorSet'))
	X = struct( ...
		'sensor',generate_mo_withopt_v1('sensor')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'description',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'sensor'))
	X = struct( ...
		'display_position',generate_mo_withopt_v1('display_position')...
		,'parameters',generate_mo_withopt_v1('parameters')...
		,'table',generate_mo_withopt_v1('table')...
		,'sensor_type',generate_mo_withopt_v1('sensor_type')...
		,'usageType',generate_mo_withopt_v1('usageType')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'network_id',[]...
			,'link_position',[]...
			,'link_id',[]...
			,'link_type_original',[]...
			,'java_class',[]...
			,'sensor_id_original',[]...
			,'data_feed_id',[]...
			,'lane_number',[]...
			,'link_offset',[]...
			,'modStamp',[]...
			,'mod_stamp',[]...
			,'health_status',[]...
			)...
	);
	return
end

if(strcmp(name,'sensor_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'ActuatorSet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'actuator',generate_mo_withopt_v1('actuator')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'actuator'))
	X = struct( ...
		'scenarioElement',generate_mo_withopt_v1('scenarioElement')...
		,'display_position',generate_mo_withopt_v1('display_position')...
		,'parameters',generate_mo_withopt_v1('parameters')...
		,'table',generate_mo_withopt_v1('table')...
		,'actuator_type',generate_mo_withopt_v1('actuator_type')...
		,'queue_override',generate_mo_withopt_v1('queue_override')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'modStamp',[]...
			,'health_status',[]...
			)...
	);
	return
end

if(strcmp(name,'actuator_type'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'queue_override'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'strategy',[]...
			)...
	);
	return
end

if(strcmp(name,'InitialDensitySet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'density',generate_mo_withopt_v1('density')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'tstamp',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'density'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'vehicle_type_id',[]...
			,'crudFlag',[]...
			,'id',[]...
			,'link_id',[]...
			,'destination_network_id',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'WeavingFactorSet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'weavingfactors',generate_mo_withopt_v1('weavingfactors')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'weavingfactors'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'vehicle_type_id',[]...
			,'link_in',[]...
			,'link_out',[]...
			)...
	);
	return
end

if(strcmp(name,'SplitRatioSet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'splitRatioProfile',generate_mo_withopt_v1('splitRatioProfile')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'splitRatioProfile'))
	X = struct( ...
		'splitratio',generate_mo_withopt_v1('splitratio')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'node_id',[]...
			,'start_time',[]...
			,'dt',[]...
			,'network_id',[]...
			,'destination_network_id',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'splitratio'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'link_in',[]...
			,'link_out',[]...
			,'vehicle_type_id',[]...
			,'ids',[]...
			,'crudFlags',[]...
			,'mod_stamps',[]...
			)...
	);
	return
end

if(strcmp(name,'DownstreamBoundaryCapacitySet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'downstreamBoundaryCapacityProfile',generate_mo_withopt_v1('downstreamBoundaryCapacityProfile')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'downstreamBoundaryCapacityProfile'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'link_id',[]...
			,'start_time',[]...
			,'dt',[]...
			)...
	);
	return
end

if(strcmp(name,'EventSet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'event',generate_mo_withopt_v1('event')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'event'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'display_position',generate_mo_withopt_v1('display_position')...
		,'targetElements',generate_mo_withopt_v1('targetElements')...
		,'parameters',generate_mo_withopt_v1('parameters')...
		,'splitratioEvent',generate_mo_withopt_v1('splitratioEvent')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'tstamp',[]...
			,'enabled',[]...
			,'type',[]...
			,'java_class',[]...
			)...
	);
	return
end

if(strcmp(name,'splitratioEvent'))
	X = struct( ...
		'splitratio',generate_mo_withopt_v1('splitratio')...
	);
	return
end

if(strcmp(name,'DemandSet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'demandProfile',generate_mo_withopt_v1('demandProfile')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'crudFlag',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'demandProfile'))
	X = struct( ...
		'demand',generate_mo_withopt_v1('demand')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'crudFlag',[]...
			,'knob',[]...
			,'start_time',[]...
			,'dt',[]...
			,'link_id_org',[]...
			,'destination_network_id',[]...
			,'std_dev_add',[]...
			,'std_dev_mult',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'demand'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'vehicle_type_id',[]...
			,'ids',[]...
			,'crudFlags',[]...
			,'mod_stamps',[]...
			)...
	);
	return
end

if(strcmp(name,'ControllerSet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'controller',generate_mo_withopt_v1('controller')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'controller'))
	X = struct( ...
		'parameters',generate_mo_withopt_v1('parameters')...
		,'target_actuators',generate_mo_withopt_v1('target_actuators')...
		,'feedback_sensors',generate_mo_withopt_v1('feedback_sensors')...
		,'ActivationIntervals',generate_mo_withopt_v1('ActivationIntervals')...
		,'table',generate_mo_withopt_v1('table')...
		,'ATTRIBUTE',struct(...
			'name',[]...
			,'type',[]...
			,'id',[]...
			,'dt',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'controllerType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'usageType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'queue_controller'))
	X = struct( ...
		'parameters',generate_mo_withopt_v1('parameters')...
		,'ATTRIBUTE',struct(...
			'type',[]...
			,'java_class',[]...
			)...
	);
	return
end

if(strcmp(name,'ActivationIntervals'))
	X = struct( ...
		'interval',generate_mo_withopt_v1('interval')...
	);
	return
end

if(strcmp(name,'interval'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'start_time',[]...
			,'end_time',[]...
			)...
	);
	return
end

if(strcmp(name,'target_actuators'))
	X = struct( ...
		'target_actuator',generate_mo_withopt_v1('target_actuator')...
	);
	return
end

if(strcmp(name,'target_actuator'))
	X = struct( ...
		'usageType',generate_mo_withopt_v1('usageType')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'actuator_id_original',[]...
			,'crudFlag',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'feedback_sensors'))
	X = struct( ...
		'feedback_sensor',generate_mo_withopt_v1('feedback_sensor')...
	);
	return
end

if(strcmp(name,'feedback_sensor'))
	X = struct( ...
		'usageType',generate_mo_withopt_v1('usageType')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'sensor_id_original',[]...
			,'crudFlag',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'scenarioElement'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'usage',[]...
			,'type',[]...
			)...
	);
	return
end

if(strcmp(name,'scenarioElementType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'FundamentalDiagramSet'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'fundamentalDiagramProfile',generate_mo_withopt_v1('fundamentalDiagramProfile')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'lockedForEdit',[]...
			,'lockedForHistory',[]...
			)...
	);
	return
end

if(strcmp(name,'fundamentalDiagramProfile'))
	X = struct( ...
		'fundamentalDiagram',generate_mo_withopt_v1('fundamentalDiagram')...
		,'fundamentalDiagramType',generate_mo_withopt_v1('fundamentalDiagramType')...
		,'calibrationAlgorithmType',generate_mo_withopt_v1('calibrationAlgorithmType')...
		,'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'link_id',[]...
			,'sensor_id',[]...
			,'start_time',[]...
			,'dt',[]...
			,'mod_stamp',[]...
			,'agg_run_id',[]...
			)...
	);
	return
end

if(strcmp(name,'fundamentalDiagram'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'crudFlag',[]...
			,'id',[]...
			,'mod_stamp',[]...
			,'order',[]...
			,'capacity',[]...
			,'capacity_drop',[]...
			,'std_dev_capacity',[]...
			,'free_flow_speed',[]...
			,'congestion_speed',[]...
			,'critical_speed',[]...
			,'std_dev_free_flow_speed',[]...
			,'std_dev_congestion_speed',[]...
			,'jam_density',[]...
			,'transition_density',[]...
			)...
	);
	return
end

if(strcmp(name,'fundamentalDiagramType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'calibrationAlgorithmType'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'description',[]...
			,'in_use',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'NetworkConnections'))
	X = struct( ...
		'description',generate_mo_withopt_v1('description')...
		,'networkpair',generate_mo_withopt_v1('networkpair')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'networkpair'))
	X = struct( ...
		'linkpair',generate_mo_withopt_v1('linkpair')...
		,'ATTRIBUTE',struct(...
			'network_a',[]...
			,'network_b',[]...
			)...
	);
	return
end

if(strcmp(name,'linkpair'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'link_a',[]...
			,'link_b',[]...
			)...
	);
	return
end

if(strcmp(name,'DestinationNetworks'))
	X = struct( ...
		'destination_network',generate_mo_withopt_v1('destination_network')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'project_id',[]...
			,'name',[]...
			)...
	);
	return
end

if(strcmp(name,'destination_network'))
	X = struct( ...
		'link_references',generate_mo_withopt_v1('link_references')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'link_id_destination',[]...
			)...
	);
	return
end

if(strcmp(name,'RouteSet'))
	X = struct( ...
		'route',generate_mo_withopt_v1('route')...
		,'ATTRIBUTE',struct(...
			'project_id',[]...
			,'id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			)...
	);
	return
end

if(strcmp(name,'route'))
	X = struct( ...
		'route_link',generate_mo_withopt_v1('route_link')...
		,'ATTRIBUTE',struct(...
			'id',[]...
			,'name',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'route_link'))
	X = struct( ...
		'ATTRIBUTE',struct(...
			'id',[]...
			,'link_id',[]...
			,'link_order',[]...
			,'mod_stamp',[]...
			,'crudFlag',[]...
			)...
	);
	return
end

if(strcmp(name,'duration'))
	X=struct(...
		'ATTRIBUTE',struct(...
			'milliseconds',[]...
			)...
	);
return
end

if(strcmp(name,'dateTime'))
	X=struct(...
		'ATTRIBUTE',struct(...
			'milliseconds',[]...
			)...
	);
return
end

error([name ' is not a supported model object'])